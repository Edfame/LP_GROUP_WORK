
import java_cup.runtime.*;

action code {:
  // cria uma instancia da maquina
  TISC maquina = new TISC();
:} ;

parser code {:
  Yylex lexer;

  public void report_error(String message, Object error_info) {
    Symbol info = (Symbol) error_info;

    System.err.print("** " + message);
    System.err.println(" at `" + info.value + "' in position " + info.left
		       + " **");
  }

  public void report_fatal_error(String message, Object _) {
    System.err.println("** " + message);
  }
:} ;

init with {: lexer = new Yylex(System.in); :} ;

scan with {: return lexer.yylex(); :} ;

terminal        ADD, SUB, MULT, DIV, MOD, EXP ;
terminal        PUSH_INT, PUSH_VAR, STORE_VAR, PUSH_ARG, STORE_ARG ;
terminal        SET_ARG, CALL, LOCALS, RETURN ;
terminal        JUMP, JEQ, JLT ;
terminal        PRINT, PRINT_STR, PRINT_NL ;
terminal String IDENTIFICADOR ;
terminal String	INTEIRO, STRING ;
terminal        DOIS_PONTOS;
terminal	ERRO ;

non terminal TISC programa ;
non terminal      etiqueta, instrucao ;


programa ::= programa etiqueta instrucao
	       {: RESULT = maquina; :}
         |
	 ;

etiqueta ::= IDENTIFICADOR:e DOIS_PONTOS        {: maquina.adionarInstrucao(new Etiqueta(e)); :}
	 |
	 ;

instrucao ::= 
	      ADD                                   {: maquina.adionarInstrucao(new Add()); :}
	  |   SUB                                   {: maquina.adionarInstrucao(new Sub()); :}
      |   MULT                                  {: maquina.adionarInstrucao(new Mult()); :}
	  |   DIV                                   {: maquina.adionarInstrucao(new Div()); :}
	  |   MOD                                   {: maquina.adionarInstrucao(new Mod()); :}
	  |   EXP                                   {: maquina.adionarInstrucao(new Exp()); :}
	  |   PUSH_INT INTEIRO:i                    {: maquina.adionarInstrucao(new PushInt(i)); :}
	  |   PUSH_VAR INTEIRO:d INTEIRO:n          {: maquina.adionarInstrucao(new PushVar(d,n)); :}
	  |   PUSH_ARG INTEIRO:d INTEIRO:n          {: maquina.adionarInstrucao(new PushArg(d,n)); :}
	  |   STORE_VAR INTEIRO:d INTEIRO:n         {: maquina.adionarInstrucao(new StoreVar(d,n)); :}
	  |   STORE_ARG INTEIRO:d INTEIRO:n         {: maquina.adionarInstrucao(new StoreArg(d, n)); :}
	  |   SET_ARG INTEIRO:n                     {: maquina.adionarInstrucao(new SetArg(n)); :}
      |   CALL INTEIRO:d IDENTIFICADOR:p        {: maquina.adionarInstrucao(new Call(d,p)); :}
	  |   LOCALS INTEIRO:a INTEIRO:v            {: maquina.adionarInstrucao(new Locals(a,v)); :}
	  |   RETURN                                {: maquina.adionarInstrucao(new Return()); :}
	  |   JUMP IDENTIFICADOR:e                  {: maquina.adionarInstrucao(new Jump(e)); :}
	  |   JEQ IDENTIFICADOR:e                   {: maquina.adionarInstrucao(new Jeq(e)); :}
	  |   JLT IDENTIFICADOR:e                   {: maquina.adionarInstrucao(new Jlt(e)); :}
	  |   PRINT                                 {: maquina.adionarInstrucao(new Print()); :}
	  |   PRINT_STR STRING:s                    {: maquina.adionarInstrucao(new PrintString(s)); :}
	  |   PRINT_NL                              {: maquina.adionarInstrucao(new PrintNl()); :}
	  ;
